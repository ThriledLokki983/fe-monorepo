.toggleButtonGroup {
  display: flex;
  position: relative;

  // React Aria disabled state
  &[data-disabled] {
    opacity: 0.5;
    pointer-events: none;
  }

  // Focus within styles
  &:focus-within {
    outline: none;
  }
}

// Orientation styles
.toggleButtonGroup--horizontal {
  flex-direction: row;

  // Remove border radius from middle buttons and create seamless connection
  & > :not(:first-child):not(:last-child) {
    border-radius: 0;
    border-left-width: 0;
  }

  & > :first-child:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > :last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-left-width: 0;
  }
}

.toggleButtonGroup--vertical {
  flex-direction: column;

  // Remove border radius from middle buttons and create seamless connection
  & > :not(:first-child):not(:last-child) {
    border-radius: 0;
    border-top-width: 0;
  }

  & > :first-child:not(:last-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > :last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top-width: 0;
  }
}

// Variant styles
.toggleButtonGroup--default {
  // Default styling - buttons maintain their individual appearance
  gap: 0;
}

.toggleButtonGroup--bordered {
  background-color: var(--surface-secondary);
  border: 1px solid var(--border-primary);
  border-radius: 0.5rem;
  padding: 0.25rem;
  gap: 0.125rem;

  // Override button styles to work within the group
  & > * {
    border: 1px solid transparent;
    background-color: transparent;

    &[data-selected] {
      background-color: var(--surface-primary);
      color: var(--text-on-primary);
      border-color: var(--surface-primary);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    &[data-hovered]:not([data-disabled]):not([data-selected]) {
      background-color: var(--surface-tertiary-hover, color-mix(in hsl, var(--surface-primary) 10%, transparent));
    }
  }
}

.toggleButtonGroup--seamless {
  // Seamless connection between buttons
  &.toggleButtonGroup--horizontal {
    & > :not(:first-child) {
      margin-left: -1px;
    }
  }

  &.toggleButtonGroup--vertical {
    & > :not(:first-child) {
      margin-top: -1px;
    }
  }

  // Ensure selected buttons appear above adjacent ones
  & > [data-selected] {
    position: relative;
    z-index: 1;
  }

  // Ensure hovered buttons appear above adjacent ones
  & > [data-hovered] {
    position: relative;
    z-index: 2;
  }
}

// Size variants
.toggleButtonGroup--small {
  // Small buttons handled by individual button size class
  &.toggleButtonGroup--bordered {
    padding: 0.125rem;
    gap: 0.0625rem;
  }
}

.toggleButtonGroup--medium {
  // Medium buttons handled by individual button size class
  &.toggleButtonGroup--bordered {
    padding: 0.25rem;
    gap: 0.125rem;
  }
}

.toggleButtonGroup--large {
  // Large buttons handled by individual button size class
  &.toggleButtonGroup--bordered {
    padding: 0.375rem;
    gap: 0.1875rem;
  }
}
